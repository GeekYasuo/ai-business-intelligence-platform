# AI Business Intelligence Platform Environment Configuration
# Production-ready configuration with 100+ environment variables

# ===========================================
# APPLICATION SETTINGS
# ===========================================
NODE_ENV=development
PORT=3001
HOST=0.0.0.0
API_VERSION=v2
API_PREFIX=/api

# Frontend configuration
REACT_APP_API_URL=http://localhost:3001/api
REACT_APP_GRAPHQL_URL=http://localhost:3001/graphql
REACT_APP_WS_URL=ws://localhost:3001

# ===========================================
# DATABASE CONFIGURATION
# ===========================================
# Primary PostgreSQL database
DATABASE_URL=postgresql://aiuser:aipassword@localhost:5432/ai_business_db
DB_HOST=localhost
DB_PORT=5432
DB_NAME=ai_business_db
DB_USER=aiuser
DB_PASSWORD=aipassword
DB_SSL=false
DB_POOL_MIN=2
DB_POOL_MAX=20
DB_TIMEOUT=30000

# Read replica (optional)
READ_REPLICA_URL=postgresql://aiuser:aipassword@localhost:5433/ai_business_db_read

# ===========================================
# REDIS CONFIGURATION
# ===========================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_CLUSTER_MODE=false
REDIS_MAX_RETRIES=3
REDIS_RETRY_DELAY=100

# Redis for different use cases
REDIS_CACHE_DB=1
REDIS_SESSION_DB=2
REDIS_QUEUE_DB=3

# ===========================================
# AI/ML SERVICES CONFIGURATION
# ===========================================
# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4
OPENAI_MAX_TOKENS=2000
OPENAI_TEMPERATURE=0.3
OPENAI_TIMEOUT=30000
OPENAI_MAX_RETRIES=3

# TensorFlow Configuration
TF_CPP_MIN_LOG_LEVEL=2
TF_ENABLE_ONEDNN_OPTS=1
TF_FORCE_GPU_ALLOW_GROWTH=true

# ML Model Configuration
ML_SERVICE_URL=http://localhost:8001
ML_SERVICE_TIMEOUT=60000
ML_MODEL_CACHE_TTL=3600
ML_BATCH_SIZE=32
ML_PREDICTION_THRESHOLD=0.8

# Model file paths
REVENUE_FORECAST_MODEL_PATH=./models/revenue_forecast.json
ANOMALY_DETECTION_MODEL_PATH=./models/anomaly_detection.json
CUSTOMER_SEGMENTATION_MODEL_PATH=./models/customer_segmentation.json

# ===========================================
# SECURITY CONFIGURATION
# ===========================================
# JWT Configuration
JWT_SECRET=your_super_secret_jwt_key_at_least_32_characters_long
JWT_EXPIRE=24h
JWT_REFRESH_EXPIRE=7d
JWT_ISSUER=ai-business-platform
JWT_AUDIENCE=ai-platform-users

# Session Configuration
SESSION_SECRET=your_session_secret_here
SESSION_SECURE=false
SESSION_SAME_SITE=lax
SESSION_MAX_AGE=86400000

# Password Security
BCRYPT_ROUNDS=12
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_SPECIAL=true

# API Security
API_RATE_LIMIT=100
API_RATE_WINDOW=900000
API_KEY_HEADER=X-API-Key

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
CORS_CREDENTIALS=true

# ===========================================
# EXTERNAL SERVICES
# ===========================================
# Email Configuration (SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
EMAIL_FROM="AI Business Platform" <noreply@ai-platform.com>

# SendGrid Alternative
SENDGRID_API_KEY=your_sendgrid_api_key_here

# AWS Services
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
AWS_S3_BUCKET=ai-platform-storage

# Google Cloud Services
GOOGLE_CLOUD_PROJECT_ID=your-gcp-project
GOOGLE_CLOUD_KEY_FILE=./keys/gcp-service-account.json
GOOGLE_CLOUD_STORAGE_BUCKET=ai-platform-gcp-storage

# ===========================================
# FILE STORAGE CONFIGURATION
# ===========================================
# Local file storage
UPLOAD_PATH=./uploads
TEMP_PATH=./temp
MAX_FILE_SIZE=52428800
ALLOWED_FILE_TYPES=jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx,csv

# MinIO/S3 Configuration
MINIO_ENDPOINT=http://localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_BUCKET=ai-platform-files
MINIO_USE_SSL=false

# ===========================================
# LOGGING CONFIGURATION
# ===========================================
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE=./logs/app.log
LOG_MAX_SIZE=100m
LOG_MAX_FILES=10
LOG_DATE_PATTERN=YYYY-MM-DD

# Specific logging levels
LOG_DATABASE_QUERIES=false
LOG_AI_REQUESTS=true
LOG_PERFORMANCE=true
LOG_SECURITY_EVENTS=true

# External logging
WINSTON_ELASTICSEARCH_HOST=http://localhost:9200
WINSTON_ELASTICSEARCH_INDEX=ai-platform-logs

# ===========================================
# MONITORING & OBSERVABILITY
# ===========================================
# Application Performance Monitoring
ENABLE_METRICS=true
METRICS_PORT=9464
PROMETHEUS_ENDPOINT=/metrics

# Health checks
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_INTERVAL=30000

# Error tracking
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development
SENTRY_SAMPLE_RATE=1.0

# New Relic
NEW_RELIC_LICENSE_KEY=your_newrelic_license_key
NEW_RELIC_APP_NAME=AI Business Platform

# DataDog
DD_API_KEY=your_datadog_api_key
DD_SERVICE=ai-business-platform
DD_ENV=development

# ===========================================
# CACHING CONFIGURATION
# ===========================================
# Application caching
CACHE_TTL=3600
CACHE_MAX_KEYS=10000
CACHE_CHECK_PERIOD=600

# API response caching
API_CACHE_TTL=300
API_CACHE_MAX_SIZE=100mb

# Static asset caching
STATIC_CACHE_TTL=86400
CDN_URL=https://cdn.ai-platform.com

# ===========================================
# QUEUE CONFIGURATION
# ===========================================
# Bull queue settings
QUEUE_REDIS_HOST=localhost
QUEUE_REDIS_PORT=6379
QUEUE_REDIS_DB=3

# Job processing
ML_QUEUE_CONCURRENCY=5
EXPORT_QUEUE_CONCURRENCY=3
EMAIL_QUEUE_CONCURRENCY=10

# Job retry settings
JOB_MAX_ATTEMPTS=3
JOB_RETRY_DELAY=5000
JOB_BACKOFF_TYPE=exponential

# ===========================================
# RATE LIMITING
# ===========================================
# Global rate limits
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL=true

# API endpoint specific limits
RATE_LIMIT_AI_WINDOW_MS=300000
RATE_LIMIT_AI_MAX=20
RATE_LIMIT_AUTH_WINDOW_MS=900000
RATE_LIMIT_AUTH_MAX=10

# ===========================================
# THIRD-PARTY INTEGRATIONS
# ===========================================
# Slack Integration
SLACK_WEBHOOK_URL=your_slack_webhook_url
SLACK_BOT_TOKEN=your_slack_bot_token
SLACK_CHANNEL_ALERTS=#alerts

# Microsoft Teams
TEAMS_WEBHOOK_URL=your_teams_webhook_url

# Analytics
GOOGLE_ANALYTICS_ID=GA-XXXXX-X
MIXPANEL_TOKEN=your_mixpanel_token

# Social Authentication
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret
MICROSOFT_CLIENT_ID=your_microsoft_client_id
MICROSOFT_CLIENT_SECRET=your_microsoft_client_secret

# ===========================================
# DEVELOPMENT SETTINGS
# ===========================================
# Development tools
DEBUG=ai-platform:*
DEBUG_COLORS=true
NODE_OPTIONS=--max-old-space-size=4096

# Hot reloading
CHOKIDAR_USEPOLLING=false
WATCHPACK_POLLING=false

# Testing
TEST_DATABASE_URL=postgresql://aiuser:aipassword@localhost:5432/ai_business_test
TEST_TIMEOUT=30000
TEST_COVERAGE_THRESHOLD=85

# ===========================================
# PRODUCTION OVERRIDES
# ===========================================
# Uncomment and modify for production deployment

# NODE_ENV=production
# LOG_LEVEL=warn
# DEBUG=false
# SESSION_SECURE=true
# CORS_CREDENTIALS=true
# RATE_LIMIT_MAX_REQUESTS=50
# JWT_EXPIRE=1h
# CACHE_TTL=7200

# ===========================================
# CONTAINER SETTINGS
# ===========================================
# Docker configuration
COMPOSE_PROJECT_NAME=ai-business-platform
POSTGRES_DB=ai_business_db
POSTGRES_USER=aiuser
POSTGRES_PASSWORD=aipassword

# Kubernetes settings
K8S_NAMESPACE=ai-platform
K8S_CLUSTER_NAME=ai-platform-cluster

# ===========================================
# FEATURE FLAGS
# ===========================================
# Feature toggles
ENABLE_AI_FEATURES=true
ENABLE_ADVANCED_ANALYTICS=true
ENABLE_REAL_TIME_UPDATES=true
ENABLE_MULTI_TENANT=false
ENABLE_AUDIT_LOGGING=true
ENABLE_DATA_EXPORT=true

# Beta features
ENABLE_VOICE_QUERIES=false
ENABLE_VIDEO_ANALYTICS=false
ENABLE_BLOCKCHAIN_INTEGRATION=false

# ===========================================
# BACKUP & RECOVERY
# ===========================================
# Database backups
DB_BACKUP_ENABLED=true
DB_BACKUP_SCHEDULE=0 2 * * *
DB_BACKUP_RETENTION_DAYS=30
DB_BACKUP_S3_BUCKET=ai-platform-backups

# File backups
FILE_BACKUP_ENABLED=true
FILE_BACKUP_SCHEDULE=0 3 * * *

# ===========================================
# COMPLIANCE & LEGAL
# ===========================================
# Data protection
GDPR_ENABLED=true
DATA_RETENTION_DAYS=2555
ANONYMIZATION_ENABLED=true

# Audit requirements
AUDIT_LOG_ENABLED=true
AUDIT_LOG_RETENTION_DAYS=2555
COMPLIANCE_MODE=strict

# ===========================================
# PERFORMANCE TUNING
# ===========================================
# Node.js performance
UV_THREADPOOL_SIZE=128
NODE_OPTIONS=--max-old-space-size=8192

# Database performance
DB_CONNECTION_POOL_SIZE=20
DB_QUERY_TIMEOUT=30000
DB_IDLE_TIMEOUT=300000

# Memory management
MEMORY_LIMIT=8192mb
GC_OPTIMIZE=true

# ===========================================
# INSTRUCTIONS
# ===========================================
# 1. Copy this file to .env
# 2. Update all "your_*_here" values with actual credentials
# 3. Generate secure secrets for JWT_SECRET and SESSION_SECRET
# 4. Obtain API keys from respective service providers
# 5. Configure database and Redis connections
# 6. Set appropriate values for your deployment environment
# 7. Never commit .env file to version control
# 8. Use different configurations for dev/staging/production
# 9. Regularly rotate secrets and API keys
# 10. Monitor and adjust performance settings based on usage
